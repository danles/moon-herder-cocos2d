////  Line.h//  MoonHerder////  Created by Roger Engelbert on 10/9/12.//  Copyright Done With Computers 2012. All rights reserved.//	#import "Ball.h"static const int TIME_ACTIVE = 36;static const float TIME_CURVING = 0.85f;static const float BLINK_INTERVAL = 1.0f;static const float CURVE_INTERVAL = 1.5f;static const int CURVE_AMOUNT = 40;static const float BOUNCE = 0.2f;@interface Line : GameSprite {        float _length;    float _bounce;        @private    float _blinkInterval;    float _activeInterval;    float _curveInterval;    float _vectorX;    float _vectorY;    float _normalAngle;    float _normalCos;    float _normalSin;    float _lenSquared;        int _blinkState;    int _curveState;        CGPoint _curve;    CGPoint _start;    CGPoint _end;    CGPoint _normalLeft;    CGPoint _normalRight;    CGPoint _collisionPoint;    	BOOL _blinking;}@property float length;@property int blinkState;@property int curveState;@property CGPoint start;@property CGPoint end;@property CGPoint curve;@property CGPoint collisionPoint;-(void) setValues:(CGPoint) start endPoint:(CGPoint) end;-(BOOL) collidesWithBall:(Ball *) ball;-(float) rangeWithBall:(Ball *) ball;-(CGPoint) getNormalForBall:(Ball *) ball;-(float) ballProjectionOfBall:(Ball *) ball onNormal:(CGPoint) normal;-(void) calculateLineData;@end					